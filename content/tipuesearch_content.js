var tipuesearch = {"pages": [{'title': 'About', 'text': '\n 組員: \n 41023146洪偉陞(組長) \n 41023137林峻源 \n 41023148夏進源 \n 41023154張韋翔 \n 41023155黃立宇 \n \n repo: https://github.com/41023146/project_a \n site: https://41023146.github.io/project_a/content/ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n https://github.com/mdecycu/cmsite  \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Research', 'text': 'meeting1 \n 1.仿生義肢方向探討(要應用在哪裡)，設計雙足義肢轉向較為困難 \n 2.仿生馬義肢同樣為目的不明確，且要考慮到固定的問題 \n 3.專題要有清楚的目標及功能 \n 4.護膝的目標及功能較明確，比較知道零件的規格，可延伸至外骨骼，看是否有目前沒有人嘗試的部分 \n 5.護膝無法用3D列印，強度不夠 \n 6.可以想生活中的問題是否可以用機構來解決 \n 7.專題有兩種方向：實物為主模擬為輔、模擬為主(像是骨科器材沒有實物只能用模擬) \n 8.老師的題目：燃料電池、骨科手術模擬、電動巴士電池、複合材料 \n meeting2 \n 前三個貢獻最高，功能情境定位要更加清晰明確，細部深入痛點 提供佐證資料 \n 下禮拜meet要討論出可行性貢獻性較高的 \n 四個題目跟其他case列出貢獻性 差異性 突破性（想兩個)找出不一樣的方法針對 功能 可行性提出來 \n 其一 \n 彈力護膝 成案蠻多 題目方向應用可以 要做出改良 增加不一樣的東西 思考訴求跟他們有哪些不同 確認看是否只有出力 （可調出力大小 為改良重點 可設計兩邊都做彈簧 省掉機構 其二 用在痛風機率偏小 可以用在中風較好 減少腳板下垂 跌倒情況發生 用在腳無力的情況下  可配合拐杖 鞋子使用  可尋找有機構可以動的（少部分 建議要做機構可活動樣品 看其他是否有缺點 加以改良 其三 功能跟規格要再考慮 要定義情境 否則功能太廣 定義動作（搬運等 找最常出現的動作 可參考下肢運動需要幫忙（腳起立 效用貢獻較四明顯 其四 機構考慮夾腳跟伸縮的方式 要怎麼實現預定目標 \n meeting3 1.輔具看一下市面上是否有販售💯 \n 2.確定專利是否有出現 看是否會重複 避免做一樣的物品 \n 3.腳踝輔具目的是什麼 需求是什麼 可動性是什麼 \n （目的是支撐 需求可能是蹲下彎曲（待查詢 \n 4.看一下網上圖片條件規格定義 \n 5.材質 \n 6.AFO查詢中文英文全名 方便找案例 \n 7.Ankle Foot Orthotics \n 8.可運動的範圍要多大 量化規格需求（角度 \n 9.NW案例功能列出來（一人要查詢兩樣 \n 10.專利一個 （可看到較多技術跟內容錢 \n meeting4 \n 1.PPT第二個第五個再深入查詢，有哪些實際的產品 A找各圖片相關實際產品的資訊（病因 彈性 主力 角度 舒適度 強度 。。等更多） B做一個列表，列出缺點優點 方便加以改進 \n 2.可針對“病因 ”決定需要具備哪些功能規格 A.查詢病能哪些需要轉角度哪些不需要的 （避免設計跟實用不對等） B可動角度大小！！！（目前研究方向） C資料深究角度多大 \n 3.可考慮延伸到“復健”輔具的用途或功能，就可加入少部分的機電功能應用', 'tags': '', 'url': 'Research.html'}, {'title': 'Data', 'text': '1.圖檔: \n \n \n 2.報告: \n (1) 自主學習報告 \n (2) 專題試想 \n (3) 專題試想2 \n (4)專題試想3 \n', 'tags': '', 'url': 'Data.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};